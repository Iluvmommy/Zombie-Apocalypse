survivor survivor;
ArrayList<Zombies> zombies;
ArrayList<Bushes> bushes;
ArrayList<Laser> lasers;

  float velocityY;
  float velocityX;
  float Xdir = 0;
  float Ydir = 0;
  float x;
  float y;
  int score;
  int scene = 1;
  int startingTime;
  
void gameOver() {
  fill(0);
  textFont(createFont("MonstersAttack", 30), 40);
  text("You Die", width/2, height/2);
  text("Your Score was " + score, width/2, height/2 + 50);
}

void startPage() {
  fill(0);
  textFont(createFont("MonstersAttack", 40), 40);
  text("Zombie Apocalypse", width/2, height/2);
  textSize(20);
  text("click to begin", width/2, height/2+60);
}

void randomZombieSpot() {
  x = random(-width/2, 1.5*width);
  y = random(-height/2, 1.5*height);
  if (x > 0 && x < width/2) x -= width/2; 
  if (x >= width/2 && x < width) x += width/2; 
  if (y > 0 && x < height/2) x -= height/2; 
  else if (y >= height/2 && y < height) y += height/2;
}

void setup(){
  size(900, 900);
  textAlign(CENTER, CENTER);
  
  survivor = new survivor(width/2, height/2, 40);
  zombies = new ArrayList<Zombies>();
  bushes = new ArrayList<Bushes>();
  lasers  = new ArrayList <Laser>();
  
  for(int i = 0; i < 7; i++) {
      randomZombieSpot();
      zombies.add(new Zombies(x, y, 50, 0));
    }
  
  for(int i = 0; i < 6; i++) {
      bushes.add(new Bushes( random(width), random(height), random(30, 50)));
    }
}


void draw() {
  background(200, 255, 200);
  
  if (scene == 1) { startPage(); }
  else if (scene == 3) {gameOver();}
  
  else if (scene == 2) {
    //score display
    score = int(0.001 * millis()) - startingTime;
    fill(0);
    text(score, width/2, 20);
    
    for (Zombies zombie : zombies) {
        if (survivor.hit(zombie)) scene = 3;
        else zombie.updateItself();
        
        zombie.move();
        zombie.display();
        
        for (Bushes bush : bushes ) {
          if (zombie.near(bush)) zombie.avoid(bush);
          bush.display();
      }
    }
    
    //laser for-loop
    for (int i = lasers.size()-1; i >= 0; i--) {
      Laser laser = lasers.get(i);
      laser.display();
      laser.move();
      
      if (laser.offScreen()) lasers.remove(i);
      else {
        //zombie for loop
        for (int j = zombies.size()-1; j >= 0; j--) {
          Zombies zombie = zombies.get(j);
          if (laser.hit(zombie)) {
            randomZombieSpot();
            
            //sees if it is hit already
            if (zombie.status == 0 || zombie.status == 1){
              zombie.status += 1;
            }
            else if (zombie.status == 2) {
              zombies.remove(j);
              zombies.add(new Zombies(x, y, 50, 0));
            }
    
            if (score % 10 == 0) {
              zombies.add(new Zombies(x, y, 50, 0));
              survivor.movingRate += 0.01;
              zombie.zombieSpeed += 0.002;
            }
          }
        }
    
        //bushes for loop
        for (int g = bushes.size()-1; g >= 0; g--) {
          Bushes bush = bushes.get(g);
          if (laser.hit(bush)) {
            bushes.remove(g);
            bushes.add(new Bushes(random(width), random(height), random(30, 50)));
          }
        }
      }
    }
    
    survivor.display();
    survivor.move();
}
}


void keyPressed() {
  survivor.movingRate += 0.01;
  if (keyCode == UP) survivor.setDir(0, -1);
  else if (keyCode == DOWN) survivor.setDir(0, 1);
  else if (keyCode == LEFT) survivor.setDir(-1, 0);
  else if (keyCode == RIGHT) survivor.setDir(1, 0);
}

void mouseClicked() {
  lasers.add(new Laser(survivor.x, survivor.y, 10, mouseX-survivor.x, mouseY-survivor.y));
  
  if (scene == 1) {
    scene = 2;
    startingTime = int(0.001 * millis());
  }
}
